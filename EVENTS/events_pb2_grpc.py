# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import events_pb2 as events__pb2


class EventsStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetEvents = channel.unary_unary(
                '/lngapy.events.Events/GetEvents',
                request_serializer=events__pb2.GetEventsRequest.SerializeToString,
                response_deserializer=events__pb2.GetEventsRepsonse.FromString,
                )
        self.GetCurrentEvent = channel.unary_unary(
                '/lngapy.events.Events/GetCurrentEvent',
                request_serializer=events__pb2.GetCurrentEventRequest.SerializeToString,
                response_deserializer=events__pb2.GetCurrentEventRepsonse.FromString,
                )
        self.AddOrUpdateEvent = channel.unary_unary(
                '/lngapy.events.Events/AddOrUpdateEvent',
                request_serializer=events__pb2.AddOrUpdateEventRequest.SerializeToString,
                response_deserializer=events__pb2.AddOrUpdateEventResponse.FromString,
                )
        self.AddUserToEvent = channel.unary_unary(
                '/lngapy.events.Events/AddUserToEvent',
                request_serializer=events__pb2.AddUserToEventRequest.SerializeToString,
                response_deserializer=events__pb2.AddUserToEventResponse.FromString,
                )
        self.SendEventInvoices = channel.unary_unary(
                '/lngapy.events.Events/SendEventInvoices',
                request_serializer=events__pb2.SendEventInvoicesRequest.SerializeToString,
                response_deserializer=events__pb2.SendEventInvoicesResponse.FromString,
                )
        self.CheckOutUserFromEvent = channel.unary_unary(
                '/lngapy.events.Events/CheckOutUserFromEvent',
                request_serializer=events__pb2.CheckOutUserFromEventRequest.SerializeToString,
                response_deserializer=events__pb2.CheckOutUserFromEventResponse.FromString,
                )


class EventsServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetEvents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCurrentEvent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddOrUpdateEvent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddUserToEvent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendEventInvoices(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckOutUserFromEvent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EventsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetEvents': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEvents,
                    request_deserializer=events__pb2.GetEventsRequest.FromString,
                    response_serializer=events__pb2.GetEventsRepsonse.SerializeToString,
            ),
            'GetCurrentEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCurrentEvent,
                    request_deserializer=events__pb2.GetCurrentEventRequest.FromString,
                    response_serializer=events__pb2.GetCurrentEventRepsonse.SerializeToString,
            ),
            'AddOrUpdateEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.AddOrUpdateEvent,
                    request_deserializer=events__pb2.AddOrUpdateEventRequest.FromString,
                    response_serializer=events__pb2.AddOrUpdateEventResponse.SerializeToString,
            ),
            'AddUserToEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.AddUserToEvent,
                    request_deserializer=events__pb2.AddUserToEventRequest.FromString,
                    response_serializer=events__pb2.AddUserToEventResponse.SerializeToString,
            ),
            'SendEventInvoices': grpc.unary_unary_rpc_method_handler(
                    servicer.SendEventInvoices,
                    request_deserializer=events__pb2.SendEventInvoicesRequest.FromString,
                    response_serializer=events__pb2.SendEventInvoicesResponse.SerializeToString,
            ),
            'CheckOutUserFromEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckOutUserFromEvent,
                    request_deserializer=events__pb2.CheckOutUserFromEventRequest.FromString,
                    response_serializer=events__pb2.CheckOutUserFromEventResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'lngapy.events.Events', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Events(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lngapy.events.Events/GetEvents',
            events__pb2.GetEventsRequest.SerializeToString,
            events__pb2.GetEventsRepsonse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCurrentEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lngapy.events.Events/GetCurrentEvent',
            events__pb2.GetCurrentEventRequest.SerializeToString,
            events__pb2.GetCurrentEventRepsonse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddOrUpdateEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lngapy.events.Events/AddOrUpdateEvent',
            events__pb2.AddOrUpdateEventRequest.SerializeToString,
            events__pb2.AddOrUpdateEventResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddUserToEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lngapy.events.Events/AddUserToEvent',
            events__pb2.AddUserToEventRequest.SerializeToString,
            events__pb2.AddUserToEventResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendEventInvoices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lngapy.events.Events/SendEventInvoices',
            events__pb2.SendEventInvoicesRequest.SerializeToString,
            events__pb2.SendEventInvoicesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckOutUserFromEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lngapy.events.Events/CheckOutUserFromEvent',
            events__pb2.CheckOutUserFromEventRequest.SerializeToString,
            events__pb2.CheckOutUserFromEventResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
